-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Advent of Code REST API bindings
--   
--   Haskell bindings for Advent of Code REST API. Please use responsibly!
@package advent-of-code-api
@version 0.1.0.0


-- | Haskell bindings for Advent of Code 2018 REST API.
--   
--   Specify your requests with <a>AoC</a> and <a>AoCSettings</a>, and run
--   them with <a>runAoC</a>.
--   
--   Please use responsibly. All actions are rate-limited to a minimum of
--   one request per minute.
module Advent

-- | An API command. An <tt><a>AoC</a> a</tt> an AoC API request that
--   returns results of type <tt>a</tt>.
data AoC :: Type -> Type

-- | Fetch prompts, as HTML.
--   
--   Note that you can give a bogus Session Key and still get Part 1 of a
--   given day, provided the day is already released.
[AoCPrompt] :: Finite 25 -> Char -> AoC Text

-- | Fetch input
[AoCInput] :: Finite 25 -> AoC Text

-- | Submit answer.
--   
--   <b>WARNING</b>: Answers are not length-limited. Answers are stripped
--   of leading and trailing whitespace and run through <a>encode</a>
--   before submitting.
[AoCSubmit] :: Finite 25 -> Char -> String -> AoC (Text, SubmitRes)

-- | Setings for running an API request.
--   
--   Session keys are required for all commands, but if you enter a bogus
--   key you should be able to get at least Part 1 from <a>AoCPrompt</a>.
--   
--   The session key can be found by logging in on a web client and
--   checking the cookies. You can usually check these with in-browser
--   developer tools.
--   
--   Throttling is hard-limited to a minimum of 1 second between calls.
--   Please be respectful and do not try to bypass this.
--   
--   If no cache directory is given, one will be allocated using
--   <a>getTemporaryDirectory</a>.
data AoCSettings
AoCSettings :: String -> Integer -> Maybe FilePath -> Int -> AoCSettings

-- | Session key
[_aSessionKey] :: AoCSettings -> String

-- | Year of challenge
[_aYear] :: AoCSettings -> Integer

-- | Cache directory
[_aCache] :: AoCSettings -> Maybe FilePath

-- | Throttle delay, in milliseconds. Minimum is 1000000.
[_aThrottle] :: AoCSettings -> Int

-- | The result of a submission.
data SubmitRes

-- | global rank
SubCorrect :: Maybe Integer -> SubmitRes
SubIncorrect :: SubmitRes
SubWait :: SubmitRes
SubInvalid :: SubmitRes
SubUnknown :: SubmitRes

-- | Pretty-print a <a>SubmitRes</a>
showSubmitRes :: SubmitRes -> String

-- | Run an <tt>API</tt> command with a given <a>AoCSettings</a> to produce
--   the result or a list of (lines of) errors.
--   
--   <b>WARNING</b>: Answers are not length-limited. Answers are stripped
--   of leading and trailing whitespace and run through <a>encode</a>
--   before submitting.
runAoC :: AoCSettings -> AoC a -> IO (Either AoCError a)

-- | Get the day associated with a given API command.
aocDay :: AoC a -> Finite 25

-- | Prompt release time
challengeReleaseTime :: Integer -> Finite 25 -> UTCTime

-- | Get time until release of a given challenge.
timeToRelease :: Integer -> Finite 25 -> IO NominalDiffTime

-- | Check if a challenge has been released yet.
challengeReleased :: Integer -> Finite 25 -> IO Bool

-- | Construct a <tt><a>Finite</a> 25</tt> (the type of a Day) from a day
--   integer (1 - 25). If input is out of range, <a>Nothing</a> is
--   returned. See <a>mkDay_</a> for an unsafe version useful for literals.
--   
--   Inverse of <a>dayToInt</a>.
mkDay :: Integer -> Maybe (Finite 25)

-- | Construct a <tt><a>Finite</a> 25</tt> (the type of a Day) from a day
--   integer (1 - 25). Is undefined if input is out of range. Can be useful
--   for compile-time literals, like <tt><a>mkDay_</a> 4</tt>
--   
--   Inverse of <a>dayToInt</a>.
mkDay_ :: Integer -> Finite 25

-- | Set the internal throttler maximum queue capacity. Default is 1000.
setAoCThrottleLimit :: Int -> IO ()

-- | Get the internal throttler maximum queue capacity.
getAoCThrottleLimit :: IO Int

-- | Parse <a>Text</a> into a <a>SubmitRes</a>.
parseSubmitRes :: Text -> SubmitRes
instance GHC.Show.Show Advent.AoCSettings
instance GHC.Show.Show Advent.AoCError
instance GHC.Classes.Ord Advent.SubmitRes
instance GHC.Classes.Eq Advent.SubmitRes
instance GHC.Show.Show Advent.SubmitRes
instance GHC.Show.Show (Advent.AoC a)
instance GHC.Exception.Type.Exception Advent.AoCError
